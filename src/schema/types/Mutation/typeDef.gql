# Course Type
enum CourseType {
  # Normal Course
  NORMAL
  # Gened Course
  GENED
  # Approved Couse
  APPROVED
}
# Course Input
input TimeIntervalInput {
  date: DayOfWeek!
  start: Time!
  end: Time!
}

input SectionInput {
  color: String,
  section: ID!,
}

# Mutations
type Mutation {
  # Create CourseTable
  createCourseTable: CourseTable
  # Change CourseTable Name
  changeCourseTableName(coursetable: ID!, name: String!): CourseTable
  # Add course
  addCourseToCourseTable(coursetable: ID!, section: SectionInput!): CourseTable
  # Add courses
  addCoursesToCourseTable(coursetable: ID!, sections: [SectionInput]!): CourseTable
  # Remove course
  removeCourseFromCourseTable(coursetable: ID!, section: ID!): CourseTable
  # Change section
  changeSectionInCourseTable(coursetable: ID!, section: ID!, to: ID!): CourseTable

  # Create Course
  createCourse(
    # Course ID
    courseID: String!
    # Course name
    name: String!
    # Course credit
    credit: Float!
    # Exam date
    exam: [Date]
    # Course Type
    type: CourseType!

    # Gened Type
    genedType: GenedType

    # Approved's Faculty
    approvedFaculty: String
    # Approved's Faculty
    approvedDepartment: String

    # Sections
    sections: [ID]!

    # Creator
    owner: ID
  ): Course

  # Create Section
  createSection(
    sectionNo: Int!,
    # TimeInterval list each need to correct with formated String
    timeIntervals: [TimeIntervalInput]!
    # Teach ID list
    teachers: [ID]
    building: String
    classroom: String
    # Section Type
    type: SectionType!
  ): Section

  # Create Course Group
  createCourseGroup(
    # Course group name
    name: String!
    # Courses
    courses: [ID]!
    # Faculty
    faculty: String!
    # Department
    department: String!
    # Year
    year: Int!
  ): CourseGroup
}