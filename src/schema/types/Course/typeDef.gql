enum GenedType {
  # Science Gened
  SC
  # Interdisciplinary Gened
  IN
  # Human Gened
  HU
  # Social Science Gened
  SO
}

interface Course {
  courseID: String!
  name: String!
  credit: Number!
  exam: [Date]
}

type NormalCourse implements Course, Node {
  _id: ID!
  courseID: String!
  name: String!
  credit: Number!
  exam: [Date]

  sections(first: Int, after: ID): SectionPage
}

type GenedCourse implements Course, Node {
  _id: ID!
  courseID: String!
  name: String!
  credit: Number!
  exam: [Date]

  type: GenedType!
  genedSections(first: Int, after: ID): SectionPage
}

type ApprovedCourse implements Course, Node {
  _id: ID!
  courseID: String!
  name: String!
  credit: Number!
  exam: [Date]

  faculty: String!
  department: String!
  approvedSections(first: Int, after: ID): SectionPage
}